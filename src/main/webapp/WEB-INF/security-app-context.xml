<?xml version="1.0" encoding="UTF-8"?>

<!--
  - Sample namespace-based configuration
  -
  -->

<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

    
    <beans:import resource="mysql_connections_settings.xml"/>
    
    <!--<debug />-->

    <global-method-security pre-post-annotations="enabled" />

    <http pattern="/resources/**" security="none"/>
    <http pattern="/loggedout" security="none"/>
    <http pattern="/login" security="none"/>
    <http pattern="/newuser" security="none"/>

    <http use-expressions="true" auto-config="true">
        <intercept-url pattern="/admin/**" access="hasRole('admin')"/>
        <intercept-url pattern="/comic/**" access="isAuthenticated()" /><!-- eventually this should move to no restrictions -->
        <intercept-url pattern="/series/**" access="isAuthenticated()" /><!-- eventually this should move to no restrictions -->
        <intercept-url pattern="/user/**" access="isAuthenticated()" />
        <intercept-url pattern="/users/**" access="isAuthenticated()" />
        <!--
             Allow all other requests. In a real application you should
             adopt a whitelisting approach where access is not allowed by default
          -->
        <intercept-url pattern="/**" access="isAuthenticated()" />
        <form-login login-page="/login" />
        <logout logout-success-url="/loggedout" delete-cookies="JSESSIONID"/>
        <remember-me />

        <!-- Uncomment to limit the number of sessions a user can have -->
        <!--<session-management invalid-session-url="/timeout">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
        </session-management>-->

    </http>

    <beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"/>

    <authentication-manager>
    
    	<authentication-provider>
    		<password-encoder hash="sha"/>
        	<jdbc-user-service data-source-ref="dataSource"
        		users-by-username-query="select username, password, enabled from user where user.username=?"
         		authorities-by-username-query="select user.username,authority from user,authority where user.username=authority.username and user.username=?"/>
    	</authentication-provider>
    
    </authentication-manager>
</beans:beans>